{"version":3,"file":"static/js/398.367dfd00.chunk.js","mappings":"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","sources":["components/Error/Error.jsx","components/MovieCard/MovieCard.jsx","components/BackLink/BackLink.jsx","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst Error = text => <p>{text}</p>;\n\nexport default Error;\n\nError.propTypes = {\n    text: PropTypes.string,\n}\n","import defaultPoster from '../../images/defaultPoster.jpg';\nimport PropTypes from 'prop-types';\n\nconst MovieCard = ({ movie }) => {\n    const {\n        poster_path,\n        title,\n        release_date,\n        overview,\n        genres,\n        vote_average } = movie;\n    \n    return (\n      <section>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : defaultPoster\n          }\n          alt={title}\n        />\n        <div>\n          <h2>\n            {title} {release_date && <span>({release_date.slice(0, 4)})</span>}\n          </h2>\n          <p>User Score: {vote_average * 10}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h4>Genres</h4>\n          {genres && <p>{genres.map(genre => genre.name).join(', ')}</p>}\n        </div>\n      </section>\n    );\n    \n    \n}\n\nexport default MovieCard;\n\nMovieCard.propTypes = {\n    data: PropTypes.object,\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(PropTypes.object),\n    vote_average: PropTypes.number,\n};","import { Link } from 'react-router-dom';\nimport { IoIosArrowRoundBack } from 'react-icons/io';\n\nconst BackLink = ({ to }) => {\n  return (\n    <Link to={to}>\n      <IoIosArrowRoundBack size=\"24\" />\n      <p>Go back</p>\n    </Link>\n  );\n};\n\nexport default BackLink;","import { useState, useEffect } from \"react\";\nimport { Link, useParams, useLocation } from \"react-router-dom\";\nimport { getDetails } from \"services/api\";\nimport MovieCard from \"components/MovieCard\";\nimport Error from \"components/Error\";\nimport Loader from \"components/Loader\";\nimport BackLink from \"components/BackLink\";\n\nconst MovieDetails = () => {\n    const [movie, setMovie] = useState([]);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const { id } = useParams();\n\n    const location = useLocation();\n    const goBack = location.state?.from || '/'; \n\n    useEffect(() => {\n        const fetchMovies = async () => {\n            if (!id) return;\n            try {\n                setLoading(true);\n                const data = await getDetails(id);\n                setMovie(data);\n            }\n            catch (error) {\n                setError(error.message);\n            }\n            finally {\n                setLoading(false);\n            }\n        }\n        fetchMovies();\n    }, [id, setMovie]);\n\n    return (\n      <main>\n        <BackLink to={goBack} />\n        {loading && <Loader />}\n        {error && <Error text={error} />}\n        {movie && <MovieCard movie={movie} />}\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\">\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </main>\n    );\n}\n\nexport default MovieDetails;\n","import axios from \"axios\";\n\nconst API_KEY = 'ccd8d539caa8bbfd0843a00859c1dd02';\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n        api_key: API_KEY,\n    }\n});\n\nexport const getTrending = async () => {\n    const { data } = await instance.get(\"/trending/movie/day\");  \n    return data;\n}\n\nexport const searchMovies = async (query,page = 1, include_adult = false) => {\n    const { data } = await instance.get(\"/search/movie\", {\n        params: {\n            query,\n            page,\n            include_adult,\n        }\n    }); \n    return data;\n}\n\n\nexport const getDetails = async (id) => {\n    const { data } = await instance.get(`/movie/${id}`);  \n    return data;\n}\n\nexport const getCredits = async (id) => {\n    const { data } = await instance.get(`/movie/${id}/credits`);  \n    return data;\n}\n\nexport const getReviews = async (id, page = 1) => {\n    const { data } = await instance.get(`/movie/${id}/reviews`, {\n        params: {\n            page,\n        }\n    });  \n    return data;\n}"],"names":["text","movie","poster_path","title","release_date","overview","genres","vote_average","src","defaultPoster","alt","slice","map","genre","name","join","to","size","useState","setMovie","error","setError","loading","setLoading","id","useParams","goBack","useLocation","state","from","useEffect","fetchMovies","getDetails","data","message","Loader","Error","instance","axios","baseURL","params","api_key","getTrending","get","searchMovies","query","page","include_adult","getCredits","getReviews"],"sourceRoot":""}