{"version":3,"file":"static/js/646.eca43768.chunk.js","mappings":"oLAIA,EAFc,SAAAA,GAAI,OAAI,uBAAIA,GAAR,C,6ICDlB,EAAuB,qBAAvB,EAAmD,qBAAnD,EAA6G,qB,SCGvGC,EAAS,SAAC,GAAe,IACvBC,EADsB,EAAZC,MACIC,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACrC,OACE,gBAAaC,UAAWC,EAAxB,WACE,gBAAID,UAAWC,EAAf,qBAAkCH,MAClC,uBAAIC,MAFGF,EAKZ,IAED,OAAO,eAAIG,UAAWC,EAAf,SAA0BP,GAClC,EAED,GAAeQ,EAAAA,EAAAA,MAAKT,G,oBCuBpB,EAjCgB,WACZ,OAA8BU,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQZ,GAAOa,EAAAA,EAAAA,MAAPb,GAmBR,OAjBAc,EAAAA,EAAAA,YAAU,WACN,GAAKd,EAAL,CACA,IAAMe,EAAY,mCAAG,sGAEbL,GAAW,GAFE,UAGaM,EAAAA,EAAAA,IAAWhB,GAHxB,mBAIU,KADfiB,EAHK,EAGLA,SACIC,OAJC,iDAKbV,EAAWS,GALE,kDAObL,EAAS,KAAMO,SAPF,yBASbT,GAAW,GATE,6EAAH,qDAYlBK,GAbe,CAclB,GAAE,CAACf,KAGF,+BACGS,IAAW,SAACW,EAAA,EAAD,IACXT,IAAS,SAACU,EAAA,EAAD,CAAO1B,KAAMgB,IACtBJ,GAAU,SAAC,EAAD,CAAQT,MAAOS,KAAc,SAACc,EAAA,EAAD,CAAO1B,KAAM,8CAG5D,C,yLClCK2B,E,QAAWC,EAAAA,OAAa,CAC1BC,QAAS,+BACTC,OAAQ,CACJC,QALQ,sCASHC,EAAW,mCAAG,sGACAL,EAASM,IAAI,uBADb,uBACfC,EADe,EACfA,KADe,kBAEhBA,GAFgB,2CAAH,qDAKXC,EAAY,mCAAG,WAAOC,GAAP,8FAAcC,EAAd,yCACDV,EAASM,IAAI,gBAAiB,CACjDH,OAAQ,CACJM,MAAAA,EACAC,cAAAA,KAJgB,uBAChBH,EADgB,EAChBA,KADgB,kBAOjBA,GAPiB,2CAAH,sDAWZI,EAAU,mCAAG,WAAMjC,GAAN,yFACCsB,EAASM,IAAT,iBAAuB5B,IADxB,uBACd6B,EADc,EACdA,KADc,kBAEfA,GAFe,2CAAH,sDAKVK,EAAU,mCAAG,WAAMlC,GAAN,yFACCsB,EAASM,IAAT,iBAAuB5B,EAAvB,aADD,uBACd6B,EADc,EACdA,KADc,kBAEfA,GAFe,2CAAH,sDAKVb,EAAU,mCAAG,WAAMhB,GAAN,yFACCsB,EAASM,IAAT,gBAAsB5B,EAAtB,aADD,uBACd6B,EADc,EACdA,KADc,kBAEfA,GAFe,2CAAH,qD","sources":["components/Error/Error.jsx","webpack://react-homework-template/./src/components/Reviews/Review/review.module.scss?ad42","components/Reviews/Review/Review.jsx","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst Error = text => <p>{text}</p>;\n\nexport default Error;\n\nError.propTypes = {\n    text: PropTypes.string,\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"review_list__3bqx-\",\"item\":\"review_item__VI9Iz\",\"image\":\"review_image__qeRuO\",\"name\":\"review_name__G0Yj5\"};","import { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './review.module.scss';\n\nconst Review = ({ items }) => {\n  const cards = items.map(({ id, author, content }) => {\n    return (\n      <li key={id} className={css.item}>\n        <h3 className={css.name}>Author: {author}</h3>\n        <p>{content}</p>\n      </li>\n    );\n  });\n\n  return <ul className={css.list}>{cards}</ul>;\n};\n\nexport default memo(Review);\n\nReview.propTypes = {\n  reviews: PropTypes.arrayOf(PropTypes.object).isRequired,\n  id: PropTypes.string,\n  author: PropTypes.string,\n  content: PropTypes.string,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'services/api';\nimport Review from './Review';\nimport Error from 'components/Error';\nimport Loader from 'components/Loader';\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n\n    const { id } = useParams();\n\n    useEffect(() => {\n        if (!id) return;\n        const fetchReviews = async () => {\n            try {\n                setLoading(true);\n                const { results } = await getReviews(id);\n                if (results.length === 0) return;\n                setReviews(results);\n            } catch (error) {\n                setError(error.message);\n            } finally {\n                setLoading(false);\n            }\n        };\n        fetchReviews();\n    }, [id]);\n\n    return (\n      <section>\n        {loading && <Loader />}\n        {error && <Error text={error} />}\n        {reviews ? <Review items={reviews} /> : <Error text={'There is no reviews for this movie yet.'} />}\n      </section>\n    );\n};\n\nexport default Reviews;","import axios from \"axios\";\n\nconst API_KEY = 'ccd8d539caa8bbfd0843a00859c1dd02';\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n        api_key: API_KEY,\n    }\n});\n\nexport const getTrending = async () => {\n    const { data } = await instance.get(\"/trending/movie/day\");  \n    return data;\n}\n\nexport const searchMovies = async (query, include_adult = false) => {\n    const { data } = await instance.get(\"/search/movie\", {\n        params: {\n            query,\n            include_adult,\n        }\n    }); \n    return data;\n}\n\n\nexport const getDetails = async id => {\n    const { data } = await instance.get(`/movie/${id}`);  \n    return data;\n}\n\nexport const getCredits = async id => {\n    const { data } = await instance.get(`/movie/${id}/credits`);  \n    return data;\n}\n\nexport const getReviews = async id => {\n    const { data } = await instance.get(`movie/${id}/reviews`);  \n    return data;\n}"],"names":["text","Review","cards","items","map","id","author","content","className","css","memo","useState","reviews","setReviews","loading","setLoading","error","setError","useParams","useEffect","fetchReviews","getReviews","results","length","message","Loader","Error","instance","axios","baseURL","params","api_key","getTrending","get","data","searchMovies","query","include_adult","getDetails","getCredits"],"sourceRoot":""}