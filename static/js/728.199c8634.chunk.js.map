{"version":3,"file":"static/js/728.199c8634.chunk.js","mappings":"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","sources":["components/Error/Error.jsx","webpack://react-homework-template/./src/components/MovieCard/card.module.scss?9878","components/MovieCard/MovieCard.jsx","webpack://react-homework-template/./src/components/BackLink/back.module.scss?8d78","components/BackLink/BackLink.jsx","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst Error = text => <p>{text}</p>;\n\nexport default Error;\n\nError.propTypes = {\n    text: PropTypes.string,\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"card_section__MOPW5\",\"image\":\"card_image__r3Odn\",\"info\":\"card_info__prSr6\",\"gap\":\"card_gap__2WlAj\"};","import defaultPoster from '../../images/defaultPoster.jpg';\nimport PropTypes from 'prop-types';\nimport css from './card.module.scss';\n\nconst MovieCard = ({ movie }) => {\n    const {\n        poster_path,\n        title,\n        release_date,\n        overview,\n        genres,\n        vote_average } = movie;\n    \n  return (\n    <>\n      <section className={css.section}>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : defaultPoster\n          }\n          alt={title}\n          className={css.image}\n        />\n        <div className={css.info}>\n          <h1 className={css.gap}>\n            {title} {release_date && <span>({release_date.slice(0, 4)})</span>}\n          </h1>\n          <p>User Score: {Math.round(vote_average * 10)}%</p>\n          <h2 className={css.gap}>Overview</h2>\n          <p>{overview}</p>\n          <h3 className={css.gap}>Genres</h3>\n          {genres && <p>{genres.map(genre => genre.name).join(', ')}</p>}\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default MovieCard;\n\nMovieCard.propTypes = {\n    data: PropTypes.object,\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(PropTypes.object),\n    vote_average: PropTypes.number,\n};","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"back_link__VfyMY\"};","import { Link } from 'react-router-dom';\nimport { IoIosArrowRoundBack } from 'react-icons/io';\nimport css from './back.module.scss';\n\nconst BackLink = ({ to }) => {\n  return (\n    <Link to={to} className={css.link}>\n      <IoIosArrowRoundBack size=\"24\" />\n      <p>Go back</p>\n    </Link>\n  );\n};\n\nexport default BackLink;","import { useState, useEffect, Suspense } from 'react';\nimport { Link, Outlet, useParams, useLocation } from \"react-router-dom\";\nimport { getDetails } from \"services/api\";\nimport MovieCard from \"components/MovieCard\";\nimport Error from \"components/Error\";\nimport Loader from \"components/Loader\";\nimport BackLink from \"components/BackLink\";\nimport styled from 'styled-components';\n\nconst AddInfo = styled.div`\n    padding: 20px;\n  }\n`;\n\nconst MovieDetails = () => {\n    const [movie, setMovie] = useState([]);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n\n\n    const { id } = useParams();\n\n    const location = useLocation();\n    const goBack = location.state?.from ?? '/'; \n\n    useEffect(() => {\n        const fetchMovies = async () => {\n            if (!id) return;\n            try {\n                setLoading(true);\n                const data = await getDetails(id);\n                setMovie(data);\n            }\n            catch (error) {\n                setError(error.message);\n            }\n            finally {\n                setLoading(false);\n            }\n        }\n        fetchMovies();\n    }, [id, setMovie]);\n\n    return (\n      <main>\n        <BackLink to={goBack} />\n        {loading && <Loader />}\n        {error && <Error text={error} />}\n        {movie && <MovieCard movie={movie} />}\n        <AddInfo>\n          <h3>Additional information</h3>\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n        </AddInfo>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </main>\n    );\n}\n\nexport default MovieDetails;\n","import axios from \"axios\";\n\nconst API_KEY = 'ccd8d539caa8bbfd0843a00859c1dd02';\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n        api_key: API_KEY,\n    }\n});\n\nexport const getTrending = async () => {\n    const { data } = await instance.get(\"/trending/movie/day\");  \n    return data;\n}\n\nexport const searchMovies = async (query, include_adult = false) => {\n    const { data } = await instance.get(\"/search/movie\", {\n        params: {\n            query,\n            include_adult,\n        }\n    }); \n    return data;\n}\n\n\nexport const getDetails = async id => {\n    const { data } = await instance.get(`/movie/${id}`);  \n    return data;\n}\n\nexport const getCredits = async id => {\n    const { data } = await instance.get(`/movie/${id}/credits`);  \n    return data;\n}\n\nexport const getReviews = async id => {\n    const { data } = await instance.get(`movie/${id}/reviews`);  \n    return data;\n}"],"names":["text","movie","poster_path","title","release_date","overview","genres","vote_average","className","css","src","defaultPoster","alt","slice","Math","round","map","genre","name","join","to","size","AddInfo","styled","useState","setMovie","error","setError","loading","setLoading","id","useParams","goBack","useLocation","state","from","useEffect","fetchMovies","getDetails","data","message","Loader","Error","Suspense","fallback","instance","axios","baseURL","params","api_key","getTrending","get","searchMovies","query","include_adult","getCredits","getReviews"],"sourceRoot":""}