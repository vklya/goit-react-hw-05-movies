{"version":3,"file":"static/js/893.bde3b7a7.chunk.js","mappings":"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","sources":["components/Error/Error.jsx","webpack://react-homework-template/./src/components/MoviesList/list.module.scss?549d","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/SearchBox/searchbox.module.scss?aea7","components/SearchBox/SearchBox.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst Error = text => <p>{text}</p>;\n\nexport default Error;\n\nError.propTypes = {\n    text: PropTypes.string,\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"list_list__WYhRJ\",\"link\":\"list_link__fSJdM\",\"item\":\"list_item__hr83S\",\"image\":\"list_image__7Et1y\",\"title\":\"list_title__6JiHP\"};","import { memo } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport defaultPoster from '../../images/defaultPoster.jpg'\nimport css from './list.module.scss';\n\nconst MoviesList = ({ items }) => {\n    const location = useLocation();\n\n    const movies = items.map(({ id, poster_path, title, release_date }) => {\n        const year = release_date.slice(0, 4);\n        return (\n          <Link\n            key={id}\n            to={`/movies/${id}`}\n            state={{ from: location }}\n            className={css.link}\n          >\n            <li className={css.item}>\n              <img\n                loading=\"lazy\"\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                    : defaultPoster\n                }\n                alt={title}\n                className={css.image}\n              />\n              <h2 className={css.title}>\n                {title} {year && <span>({year})</span>}\n              </h2>\n            </li>\n          </Link>\n        );});\n    \n    return (\n        <ul className={css.list}>\n            {movies}\n        </ul>\n    );\n}\n\nexport default memo(MoviesList);\n\nMoviesList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\n  id: PropTypes.string,\n  poster_path: PropTypes.string,\n  title: PropTypes.string,\n  release_date: PropTypes.string,\n};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"searchbox_form__QrvU+\",\"input\":\"searchbox_input__uKI6J\",\"button\":\"searchbox_button__rnNep\",\"icon\":\"searchbox_icon__VWHWj\"};","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { IoIosSearch } from 'react-icons/io';\nimport css from './searchbox.module.scss';\n\nexport default function SearchBox({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleChange = ({ target }) => {\n    setQuery(target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (query.trim() === '') {\n        toast.warning('Enter the title of the film to continue searching');\n        return;\n    }\n\n    onSubmit({ query });\n    setQuery('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <input\n        className={css.input}\n        type=\"text\"\n        placeholder=\"Search movies\"\n        value={query}\n        onChange={handleChange}\n      />\n      <button type=\"submit\" className={css.button}>\n        <IoIosSearch className={css.icon} />\n      </button>\n    </form>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { searchMovies } from \"services/api\";\nimport { toast } from 'react-toastify';\nimport Error from 'components/Error';\nimport Loader from 'components/Loader';\nimport SearchBox from \"components/SearchBox\";\nimport MoviesList from \"components/MoviesList\";\n\nconst Movies = () => {\n    const [query, setQuery] = useState('');\n    const [items, setItems] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n    \n    useEffect(() => {\n        if (!query) return;\n        const fetchMovies = async () => {\n            try {\n                setLoading(true);\n                const { results } = await searchMovies(query);\n                if (results.length === 0) {\n                    toast.error(\n                        'Sorry, there are no movies matching your search query. Please try again.'\n                    );\n                }\n                setItems(results);\n            } catch (error) {\n                setError(error.message);\n            } finally {\n                setLoading(false);\n            }\n        }\n        fetchMovies();\n    }, [query]);\n\n    const onSearch = ({query}) => {\n        setQuery(query);\n        setItems([]);\n    }\n\n    return (\n        <main>\n            <SearchBox onSubmit={onSearch} />\n            {error && <Error text={error} />}\n            {loading ? <Loader /> : <MoviesList items={items} />}\n        </main>\n    );\n}\n\nexport default Movies;","import axios from \"axios\";\n\nconst API_KEY = 'ccd8d539caa8bbfd0843a00859c1dd02';\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n        api_key: API_KEY,\n    }\n});\n\nexport const getTrending = async () => {\n    const { data } = await instance.get(\"/trending/movie/day\");  \n    return data;\n}\n\nexport const searchMovies = async (query, include_adult = false) => {\n    const { data } = await instance.get(\"/search/movie\", {\n        params: {\n            query,\n            include_adult,\n        }\n    }); \n    return data;\n}\n\n\nexport const getDetails = async id => {\n    const { data } = await instance.get(`/movie/${id}`);  \n    return data;\n}\n\nexport const getCredits = async id => {\n    const { data } = await instance.get(`/movie/${id}/credits`);  \n    return data;\n}\n\nexport const getReviews = async id => {\n    const { data } = await instance.get(`movie/${id}/reviews`);  \n    return data;\n}"],"names":["text","MoviesList","items","location","useLocation","movies","map","id","poster_path","title","year","release_date","slice","to","state","from","className","css","loading","src","defaultPoster","alt","memo","SearchBox","onSubmit","useState","query","setQuery","e","preventDefault","trim","toast","type","placeholder","value","onChange","target","setItems","setLoading","error","setError","useEffect","fetchMovies","searchMovies","results","length","message","Error","Loader","instance","axios","baseURL","params","api_key","getTrending","get","data","include_adult","getDetails","getCredits","getReviews"],"sourceRoot":""}